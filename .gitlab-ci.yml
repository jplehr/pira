# File: .gitlab-ci.yml
# License: Part of the PIRA proect. Licensed under BSD 3 clause license. See LICENSE.txt file at https://github.com/jplehr/pira/LICENSE.txt
# Description: File to configure our Gitlab CI

# Eventually we want to have: download-deps, build-deps, run-unit-tests, run-integration-tests
stages:
  - download-test
  - pira-unit-test
  - dependence-build-test
  - integration-test

default:
  after_script:
    - rm -rf $(dirname $(echo $SSH_AUTH_SOCK))
    - ssh-agent -k

# YAML anchor for setting up environment on LB cluster
.lb-setup: &lb-setup
  - eval $(ssh-agent -s)
  - ssh-add ~/.ssh/gitlab_rsa
  - module use /home/groups/sc/modules/modulefiles
  - module load gcc/8 git clang/9.0 cmake python/3 openmpi

# Update all submodules in git
.get-submodules: &get-submodules
  - git submodule init;
  - git submodule update extern/src/cgcollector;
  - git submodule update extern/src/llvm-instrumenter;
  - git submodule update --force extern/src/scorep-mod;
  - git submodule update extern/src/PGIS;


# Only test that the submodules configured in here are accessible, so we do not block the Pipeline unneccessary long
download:
  stage: download-test
  tags:
    - pira, cluster
  before_script: *lb-setup
  script: *get-submodules

# Download repositories again
# Run the automated build script to build all PIRA related software
# This job builds: LLVM-instrumenter, Score-P, CGCollector, Extra-P
# FIXME: Prior used Gitlab CI's artifacts to carry results to next stage. However, files are becoming too large
# TODO: Find why the .get-submodules anchor cannot be incorporated into either the before_script or the script itself
build-dependencies:
  stage: dependence-build-test
  tags:
    - pira, cluster
  before_script: *lb-setup
  script: 
    - git submodule init;
    - git submodule update extern/src/cgcollector;
    - git submodule update extern/src/llvm-instrumenter;
    - git submodule update --force extern/src/scorep-mod;
    - git submodule update extern/src/PGIS;
    - cd resources
    - ./build_submodules.sh $(cat /proc/cpuinfo | grep processor | wc -l)

# Runs the unit tests (that we currently have only very few of...
run-unit-tests:
  stage: pira-unit-test
  tags:
    - pira, cluster
  before_script: *lb-setup
  script:
    - export PATH=`pwd`/extern/install/scorep/bin:`pwd`/extern/install/extrap/bin:$PATH
    - echo 'The PATH is ' $PATH
    - echo 'Running unit tests'
    - ./run_tests.sh

# Runs the larger / integration tests (of which we currently have none).
run-integration-tests:
  stage: integration-test
  tags:
    - pira, cluster
  before_script: *lb-setup
  script:
    - git submodule init;
    - git submodule update extern/src/cgcollector;
    - git submodule update extern/src/llvm-instrumenter;
    - git submodule update extern/src/scorep-mod;
    - git submodule update extern/src/PGIS;
    - cd resources
    - ./build_submodules.sh $(cat /proc/cpuinfo | grep processor | wc -l)
    - echo 'Running integration tests'
    - cd ../test/integration/GameOfLife
    - ./run.sh

