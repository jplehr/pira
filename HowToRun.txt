1. Edit Configuration file - "item_based.json"
    Important note:
        1. The path should not end with "/" character.
            Example :
            Valid path in configuration file - /home/sachin/MasterThesis.
            Invalid path - /home/sachin/MasterThesis/

        2. Do not have directories having '.' example : /home/sachin/MasterThesis/lulesh2.0.3
           instead have /home/sachin/MasterThesis/lulesh203 this should be insync with the functors name
           example: clean_lulesh203_local-flav1.py.
           A future enhancement can be to decouple this dependency.


    An example of the configuration file is shown below
    detailed description if the key value can be found in the Thesis
{
  "description":{
    "directories":[
      "/home/sachin/MasterThesis"
    ],
    "builds": {
        "/home/sachin/MasterThesis": {
          "prefix": "",
          "items": [
            "/home/sachin/MasterThesis/lulesh2.0.3",
            "/home/sachin/MasterThesis/lulesh"
          ],
          "flavors": {
            "/home/sachin/MasterThesis": [
              "local-flav1",
              "vanilla"
            ],
            "instrument-analysis": {
              "/home/sachin/MasterThesis/lulesh2.0.3": [
                "/home/sachin/IdeaProjects/master/benchpress/functors",
                "/home/sachin/MasterThesis/lulesh2.0.3/lulesh",
                "/home/sachin/CLionProjects/pgoe"
                ],
              "/home/sachin/MasterThesis/lulesh":[
                "/home/sachin/IdeaProjects/master/benchpress/functors2",
                "/home/sachin/MasterThesis/lulesh/lulesh",
                "/home/sachin/CLionProjects/pgoe"
              ]
            },
            "builders": {
              "/home/sachin/MasterThesis/lulesh2.0.3": "/home/sachin/IdeaProjects/master/benchpress/functors",
              "/home/sachin/MasterThesis/lulesh": "/home/sachin/IdeaProjects/master/benchpress/functors"
            },
            "run": {
              "/home/sachin/MasterThesis/lulesh2.0.3": {
                "args": [
                ],
                "runner": "/home/sachin/IdeaProjects/master/benchpress/functors",
                "submitter":""
              },
              "/home/sachin/MasterThesis/lulesh":{
                "args":[

                ],
                "runner":"/home/sachin/IdeaProjects/master/benchpress/functors",
                "submitter":""
              }
            }
          }
        }
      },
      "glob-flavors":[
      ],
      "glob-submitter":{
        "flav1":"/path/to/py/functor",
        "flav2":"path/to/py/functor"
      }
  }
}

        a. Directories
            The values of the directories is a container in which all the related applications reside.

        b. builds
            i) Each directory example "/home/sachin/MasterThesis" contains applications called items.
                In the above shown "/home/sachin/MasterThesis/lulesh2.0.3" and "/home/sachin/MasterThesis/lulesh"
                are two different items.

    ii) Each directory has one or more flavors

    iii) Key "instrument-analysis" represent each items configuration for analysis
        Example the first value of "/home/sachin/MasterThesis/lulesh2.0.3" i.e.,
        "/home/sachin/IdeaProjects/master/benchpress/functors" represents the path where the functors for analysis are located.
        The second value i.e., "/home/sachin/MasterThesis/lulesh2.0.3/lulesh" represents the experiment directory
        especially used for Score-P where the cube files will be stored.
        The third value i.e., "/home/sachin/CLionProjects/pgoe" represents the path where the analysis tool executable is located.

    iv) Key - "builders"
        Contains the path to functors to build the items.

    v) Key - "run"
        Contains the path funtors to run the items.


2. Naming ipcg file
    The ipcg file should be stored in analysis tool executable path with the naming convention
    <flavor>-<item>.ipcg example:local-flav1-lulesh2.0.3.ipcg


3. Creating functors
    Each item should have a different directory for its functors
    and the path must be specified in "builders", "run" and "instrument-analysis" keys.
    Each item shall follow the specific naming conventions for each of its flavors
    Example for flavor "vanilla" and item "lulesh2.3.0". Lets assume the functors are stored in Lulesh-2.3.0
    vanilla.py - contains the build rules.
    clean_vanilla.py - contains the clean rules.
    no_instr_vanilla.py - contains the build rules without instrumentation.
    runner_vanilla.py - contains the run rules.
    analyse_vanilla.py - contains the analysis command.

4.  Once the steps 1, 2 and 3 are completed and valid the application can be run
    using the following command
    python example_main.py item_based.json


Known issue:
1. Functors with names having '.' character may not be loaded. Example: clean_lulesh2.0.3_local-flav1.py